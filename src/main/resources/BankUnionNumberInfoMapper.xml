<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lubing36.core.db.gen.mapper.BankUnionNumberInfoMapper">
  <resultMap id="BaseResultMap" type="cn.lubing36.core.db.gen.domain.BankUnionNumberInfo">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="bank_union_number" jdbcType="VARCHAR" property="bankUnionNumber" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="contact_phone" jdbcType="VARCHAR" property="contactPhone" />
    <result column="contact_address" jdbcType="VARCHAR" property="contactAddress" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bank_union_number, bank_name, contact_phone, contact_address
  </sql>
  <select id="selectByExample" parameterType="cn.lubing36.core.db.gen.domain.BankUnionNumberInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from bank_union_number
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.lubing36.core.db.gen.domain.BankUnionNumberInfoExample">
    delete from bank_union_number
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lubing36.core.db.gen.domain.BankUnionNumberInfo">
    insert into bank_union_number (id, bank_union_number, bank_name, 
      contact_phone, contact_address)
    values (#{id,jdbcType=INTEGER}, #{bankUnionNumber,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, 
      #{contactPhone,jdbcType=VARCHAR}, #{contactAddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.lubing36.core.db.gen.domain.BankUnionNumberInfo">
    insert into bank_union_number
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bankUnionNumber != null">
        bank_union_number,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="contactPhone != null">
        contact_phone,
      </if>
      <if test="contactAddress != null">
        contact_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bankUnionNumber != null">
        #{bankUnionNumber,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null">
        #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="contactAddress != null">
        #{contactAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lubing36.core.db.gen.domain.BankUnionNumberInfoExample" resultType="java.lang.Long">
    select count(*) from bank_union_number
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bank_union_number
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bankUnionNumber != null">
        bank_union_number = #{record.bankUnionNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactPhone != null">
        contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.contactAddress != null">
        contact_address = #{record.contactAddress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bank_union_number
    set id = #{record.id,jdbcType=INTEGER},
      bank_union_number = #{record.bankUnionNumber,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      contact_address = #{record.contactAddress,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>